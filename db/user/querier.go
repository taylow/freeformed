// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.20.0

package postgres

import (
	"context"

	"github.com/google/uuid"
)

type Querier interface {
	// CreateUser creates a new User entry
	CreateUser(ctx context.Context, arg CreateUserParams) (User, error)
	// DeleteUser deletes a User
	DeleteUser(ctx context.Context, id uuid.UUID) (User, error)
	// DisableUser sets the enabled field to false
	DisableUser(ctx context.Context, id uuid.UUID) error
	// EnableUser sets the enabled field to true
	EnableUser(ctx context.Context, id uuid.UUID) error
	// ReadUser fetches a single User by ID
	ReadUser(ctx context.Context, id uuid.UUID) (User, error)
	// SoftDeleteUser sets the deleted_at timestamp to now(), indicating that the User is deleted
	SoftDeleteUser(ctx context.Context, id uuid.UUID) error
	// UnsoftDeleteUser sets the deleted_at timestamp to NULL, indicating that the User is not deleted
	UnsoftDeleteUser(ctx context.Context, id uuid.UUID) error
	// UpdateUser updates the details of a User
	UpdateUser(ctx context.Context, arg UpdateUserParams) (User, error)
}

var _ Querier = (*Queries)(nil)
