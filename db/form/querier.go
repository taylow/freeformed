// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.20.0

package postgres

import (
	"context"

	"github.com/google/uuid"
)

type Querier interface {
	// CheckFormExists checks if a Form exists by ID
	CheckFormExists(ctx context.Context, id string) (bool, error)
	// CreateForm creates a new Form entry
	CreateForm(ctx context.Context, arg CreateFormParams) (Form, error)
	// CreateFormData creates a new Form entry
	CreateFormData(ctx context.Context, arg CreateFormDataParams) (FormDatum, error)
	// DeleteForm deletes a Form
	DeleteForm(ctx context.Context, id string) (Form, error)
	// DeleteFormData deletes a FormData entry
	DeleteFormData(ctx context.Context, id uuid.UUID) (FormDatum, error)
	// DisableFileUploads sets the file_uploads_enabled field to false
	DisableFileUploads(ctx context.Context, id string) error
	// DisableForm sets the enabled field to false
	DisableForm(ctx context.Context, id string) error
	// EnableFileUploads sets the file_uploads_enabled field to true
	EnableFileUploads(ctx context.Context, id string) error
	// EnableForm sets the enabled field to true
	EnableForm(ctx context.Context, id string) error
	// Form fetches a single Form by ID
	Form(ctx context.Context, id string) (Form, error)
	// ListFormDataByFormID fetches a list of FormData by their form ID
	ListFormDataByFormID(ctx context.Context, formID string) ([]FormDatum, error)
	// ListForms fetches a list of Forms by their IDs
	ListForms(ctx context.Context, ids []uuid.UUID) ([]Form, error)
	// ListFormsByProject fetches a list of Forms by their project ID
	ListFormsByProject(ctx context.Context, projectID uuid.UUID) ([]Form, error)
	// ReadFormData fetches a single FormData by ID
	ReadFormData(ctx context.Context, id uuid.UUID) (FormDatum, error)
	// SetFormColor sets the color field to the given value
	SetFormColor(ctx context.Context, arg SetFormColorParams) error
	// SetFormDescription sets the description field to the given value
	SetFormDescription(ctx context.Context, arg SetFormDescriptionParams) error
	// SetFormName sets the name field to the given value
	SetFormName(ctx context.Context, arg SetFormNameParams) error
	// SetFormRedirectUrl sets the redirect_url field to the given value
	SetFormRedirectUrl(ctx context.Context, arg SetFormRedirectUrlParams) error
	// SoftDeleteForm sets the deleted_at timestamp to now(), indicating that the Form is deleted
	SoftDeleteForm(ctx context.Context, id string) error
	// UnsoftDeleteForm sets the deleted_at timestamp to NULL, indicating that the Form is not deleted
	UnsoftDeleteForm(ctx context.Context, id string) error
	// UpdateForm updates the details of a Form
	UpdateForm(ctx context.Context, arg UpdateFormParams) (Form, error)
	// UpdateStatus updates the status of a Form
	UpdateStatus(ctx context.Context, arg UpdateStatusParams) (FormDatum, error)
}

var _ Querier = (*Queries)(nil)
