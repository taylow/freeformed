// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.20.0

package postgres

import (
	"context"

	"github.com/google/uuid"
)

type Querier interface {
	// ChangeTeamOwner changes the owner of a Team
	ChangeTeamOwner(ctx context.Context, arg ChangeTeamOwnerParams) error
	// CreateTeam creates a new Team entry
	CreateTeam(ctx context.Context, arg CreateTeamParams) (Team, error)
	// DeleteTeam deletes a Team
	DeleteTeam(ctx context.Context, id uuid.UUID) (Team, error)
	// DisableTeam sets the enabled field to false
	DisableTeam(ctx context.Context, id uuid.UUID) error
	// EnableTeam sets the enabled field to true
	EnableTeam(ctx context.Context, id uuid.UUID) error
	// ListTeams fetches a list of Teams by their IDs
	ListTeams(ctx context.Context, ids []uuid.UUID) ([]Team, error)
	// ReadTeam fetches a single Team by ID
	ReadTeam(ctx context.Context, id uuid.UUID) (Team, error)
	// ReadTeamByOwner fetches a single Team by owner_id
	ReadTeamByOwner(ctx context.Context, ownerID uuid.UUID) (Team, error)
	// SoftDeleteTeam sets the deleted_at timestamp to now(), indicating that the Team is deleted
	SoftDeleteTeam(ctx context.Context, id uuid.UUID) error
	// UnsoftDeleteTeam sets the deleted_at timestamp to NULL, indicating that the Team is not deleted
	UnsoftDeleteTeam(ctx context.Context, id uuid.UUID) error
	// UpdateTeam updates the details of a Team
	UpdateTeam(ctx context.Context, arg UpdateTeamParams) (Team, error)
}

var _ Querier = (*Queries)(nil)
