// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.20.0

package postgres

import (
	"context"

	"github.com/google/uuid"
)

type Querier interface {
	// ChangeProjectTeam changes the team of a Project
	ChangeProjectTeam(ctx context.Context, arg ChangeProjectTeamParams) error
	// CreateProject creates a new Project entry
	CreateProject(ctx context.Context, arg CreateProjectParams) (Project, error)
	// DeleteProject deletes a Project
	DeleteProject(ctx context.Context, id uuid.UUID) (Project, error)
	// DisableProject sets the enabled field to false
	DisableProject(ctx context.Context, id uuid.UUID) error
	// EnableProject sets the enabled field to true
	EnableProject(ctx context.Context, id uuid.UUID) error
	// ListProjects fetches a list of Projects by their IDs
	ListProjects(ctx context.Context, ids []uuid.UUID) ([]Project, error)
	// ListProjectsByTeam fetches a list of Projects by team ID
	ListProjectsByTeam(ctx context.Context, teamID uuid.UUID) ([]Project, error)
	// ReadProject fetches a single Project by ID
	ReadProject(ctx context.Context, id uuid.UUID) (Project, error)
	// SoftDeleteProject sets the deleted_at timestamp to now(), indicating that the Project is deleted
	SoftDeleteProject(ctx context.Context, id uuid.UUID) error
	// UnsoftDeleteProject sets the deleted_at timestamp to NULL, indicating that the Project is not deleted
	UnsoftDeleteProject(ctx context.Context, id uuid.UUID) error
	// UpdateProject updates the details of a Project
	UpdateProject(ctx context.Context, arg UpdateProjectParams) (Project, error)
}

var _ Querier = (*Queries)(nil)
